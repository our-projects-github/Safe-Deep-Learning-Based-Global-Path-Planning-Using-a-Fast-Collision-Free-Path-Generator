# -*- coding: utf-8 -*-
"""ai2thormodel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KFeEy0zBlPYLFihE0S51bDIoOUZ41oHw
"""

import numpy as np
import tensorflow as tf
from keras.models import Sequential, load_model
from keras.layers import Dense, Activation, LSTM
import keras
from keras.layers import Dropout

"""# net """

class SimpleRNN:
    def __new__(self, hid, inp_dim, op_dim, stacked_lstm_layers):
        self.input = tf.keras.Input(shape=(None, inp_dim))
        self.model = Sequential()
        self.model.add(LSTM(hid,
                            kernel_initializer='glorot_uniform',bias_initializer='zeros', recurrent_initializer='orthogonal', activation='relu',
                            kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None,
                            dropout=0.0, recurrent_dropout=0.0, return_sequences=True,
                            input_shape=(None, inp_dim)))
        for j in range(stacked_lstm_layers - 1):
            self.model.add(LSTM(hid, return_sequences=True))

        # self.model.add(Dense(units=50))
        # self.model.add(Activation('relu'))
        # self.model.add(Dropout(0.3))
        self.model.add(Dense(units=op_dim))
        self.model.add(Activation('relu'))

        return self.model