# -*- coding: utf-8 -*-
"""ai2thor_generate_samples.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWvyniv7PljBrprdVx3Kj5_w41Op_a31
"""

import numpy as np
import matplotlib.path as mplPath
from matplotlib.patches import Polygon
from matplotlib.collections import PatchCollection
import matplotlib.pyplot as plt
import ai2thorgeneratepatches as aigp

"""# generate samples"""

def check_collision(points, object_c):
    decisions = [p.contains_point(points,radius=2) for p in object_c]
    return not any(decisions) # will return True if all points are collision free


def generatesamples(map_name, cx, cy, load_poly, num_samples, show):

    plt.close('all')
    aigp.generate_patches(cx, cy, load_poly)

    polygon = np.asarray(np.load(load_poly, allow_pickle=True))

    object_c = []
    for i in range(polygon.shape[0]):
        obj = mplPath.Path(polygon[i])
        object_c.append(obj)

    sample_set = []
    for i in range(num_samples):
        while True:
            samples0 = np.random.uniform(2, cx-2, 1)
            samples1 = np.random.uniform(2, cy-2, 1)
            samples = np.array([samples0[0],samples1[0]])

            if check_collision(samples, object_c):
                if show:
                  plt.plot(samples[0], samples[1], 'r.')
                sample_set.append(samples)
                break
    np.save(map_name+'_'+str(num_samples)+'samples.npy', sample_set)
    
    return sample_set
